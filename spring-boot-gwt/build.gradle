plugins {
    id 'java'
    id 'eclipse'
    id 'groovy'
    id 'idea'
    id 'org.springframework.boot' version '1.5.4.RELEASE'
    id 'com.github.ben-manes.versions' version '0.15.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
ext['spock.version'] = '1.1'

repositories {
    jcenter()
}

sourceSets {
    main.java.srcDir "src/main/java"
    main.resources.srcDir "src/main/resources"
    test.java.srcDir "src/test/java"
    test.groovy.srcDir "src/test/groovy"
    test.resources.srcDir "src/test/resources"
}

dependencies {
    compileOnly('com.google.gwt:gwt-user:2.8.1')
    compileOnly('com.google.gwt:gwt-dev:2.8.1')
    compileOnly('org.fusesource.restygwt:restygwt:2.2.0')
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-jetty')
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile('javax.ws.rs:javax.ws.rs-api:2.0.1')

    runtime('com.h2database:h2')

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.codehaus.groovy:groovy-all:2.4.5')
    testCompile('org.spockframework:spock-core:1.1-groovy-2.4')
    testCompile('org.spockframework:spock-spring:1.1-groovy-2.4')
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0.1'
}

task compileGwt(dependsOn: classes, type: JavaExec) {
    ext.buildDir = "${project.buildDir}/gwt"
    ext.extraDir = "${project.buildDir}/extra"

    inputs.file sourceSets.main.java.srcDirs
    inputs.dir sourceSets.main.output.resourcesDir
    outputs.dir buildDir

    doFirst {
        file(buildDir).mkdirs()
    }

    main = 'com.google.gwt.dev.Compiler'

    classpath {
        [
                sourceSets.main.java.srcDirs,           // Java source
                sourceSets.main.output.resourcesDir,    // Generated resources
                sourceSets.main.output.classesDir,      // Generated classes
                sourceSets.main.compileClasspath,       // Deps
        ]
    }

    args = [
            'com.codecrafters.SpringBootGwt',
            '-war', buildDir,
            '-logLevel', 'INFO',
            '-localWorkers', '4',
            '-compileReport',
            '-extra', extraDir,
            '-style', 'OBF',
            '-optimize', '7' // 0=none, 9=max
    ]

    maxHeapSize = '512M'
}

compileJava.dependsOn(processResources)

jar.dependsOn compileGwt
jar {
    baseName = 'spring-boot-gwt'
    version = '1.0.0'

    into('static') {
        from compileGwt.buildDir
    }
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}
